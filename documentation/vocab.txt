# Command Line Interface:
A utility to type commands to your computer rather than clicking

# Arguments:
Value you give your program that affect how it runs

# Ecmascript
The standard Javascript is based on
Determines HOW the language should be written
https://www.ecma-international.org/publications/standards/Ecma-262.htm

# Javascript Engine
A program that converts Javascript code into something the computer processor
can Understand

# Servers and Clients
Server - computer the performs services
Client - asks for services

# Machine Code (Language)
Programming Languages spoken by computer Processors
Every program you run on a computer has been converted (compiled) into a
machine code.

# Breakpoint
A spot in our code where we tell a debugging tool to pause the execution of our
code.

# Module
A reusable block of code who's existence does not accidentally impact other
Code

# Common JS Modules
An agreed upon standard for how code modules should be structured

# First-Class functions
Everything you can do with other types you can do with functions.

# Expression
A block of code that results in a Value

# Invoke
Run the function

# Name/Value Pair
A name which maps to a value
A value can contain more name/value pairs

# Objects
A collection of name/value pairs

# Object literal
Name/Value pairs separated by commas and surrounded by curly braces

# Inheritance
One object gets access to the properties and methods of another Object

# Function constructors
A normal function that is used to construct Objects

# Primitive
A type of data that represents a single value (not an object)

# Scope
Where in code you have access to a particular variable or function.

# JSON
Javascript Object Notation -  A standard for structuring data that is inspired
by Javascript object literals

# Revealing Module Pattern
Exposing only the properties and methods you want via an returned Object

# Mutate
To change an Object

# Event
Something that has happened in our app that we can respond to
In node we actually talk about 2 different kinds of events
- System Events (C++ Core, libuv)
- Custom Events (Javascript Core, Event Emitter)

# Event listener
The code that responds to an event

# Magic string
A string that has some special meaning in our Code

# Template literal
A way to concatenate strings in Javascript (without using '+')

# Syntactic Sugar
A feature that only changes how you type something, but nothing changes under
the hood

# Asynchronous
More than one process running simultaneously
Note: Node is Asynchronous, V8 is not. Javascript is not.

# Synchronous
One process executing at a time.
Note: Javascript is synchronous. NodeJS is asynchronous

# Callback
A function passed to some other function, which we assume will be invoked at
some point

# Non-Blocking
Doing other things without stopping your Programming from running
Made possible by executing code asynchronously

# Buffer
A temporary holding spot for data being moved from one place to another

# Stream
A sequence of data made available over time

# Binary data
Data stored in binary (sets of 1s and 0s)
0101 = 5
Base 2 representation of a number

# Character sets (Unicode)
A representation of characters as numbers

# Character Encoding (UTF-8)
How characters are stored in binary

# Byte
8 bits.
00101100

# Error-First callback
Callbacks take an error object as their first parameter
null if no error, otherwise will contain an object defining the error.

# Chunk
A piece of data being sent through a Stream

# Abstract (Base) class
A type of constructor you never work directly with, but inherit from
We create new custom objects which inherit from the abstract base Class

# Pipes
Connecting 2 streams by writing to one stream what is being read from another
In node you pipe from a Readable stream to a writable stream

# Method Chaining
A method returns an object so we can keep calling more methods
Sometimes it returns the parent object (cascading) and sometimes some other
object

# Protocol
A set of rules 2 sides agree on to use when communicating
Both the client and server are programmed to understand and use that particular
set of rules.

# port
Once a computer receives a packet, how it knows what program to send it to

# http
A set of rules (and a format) for data being transferred on the Web

# MIME type
Multipurpose internet mail extensions - application/json, text/html, image/jpeg
A standard for specific the type of data being sent

# Template
Text designed to be the basis (place holder) for the final text or content
after being processed.

# API
Application Programming Interface - a set of tools for building a software
application. Usually made available via a set of URLs which accept and send
only data via HTTP and TCP/IP

# Endpoint
One URL in a Web API. Endpoint URLs can do multiple things by making choices
based on the HTTP request headers.

# Serialize
Translating an object into a format that can be stored or transferred.

# Routing
Mapping HTTP requests to content.

# Package
Code...managed and maintained with a package management system

# Package Management system
Software that automates installing and updating packages. Deals with versioning
you have or need and manages dependencies.

# Dependencies
Code that another set of code depends on to function.

# Versioning
Specifying what version of a set of code this is so others can track if a new
version has come out. This allows to watch for new features, or to watch for
'breaking changes'. The word 'semantic' implies that something conveys meaning.

Major.Minor.Patch
1.7.3

Patch - bug fixes, code will work fine
Minor - New features added, code will work fine
Major - Big changes, Your could will break (maybe)

semver.org

# Environment Variables
Global Variables specific to the environment (Server) our code is living in.

# HTTP method
Specifies the type of action the request wishes to make
GET, POST, DELETE, PUT, and others. Also called verbs.

# Middleware
Code that sits between two layers of software.
Example: In the case of Express, sitting between the request and the response.

# Static
Not Dynamic - files not processed by code in any way. HTML, CSS, images, etc.

# REST
An architectural style for building APIs.
Stands for 'Representational State Transfer'. We decided that
HTTP verbs and URLs mean something.