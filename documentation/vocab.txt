# Command Line Interface:
A utility to type commands to your computer rather than clicking

# Arguments:
Value you give your program that affect how it runs

# Ecmascript
The standard Javascript is based on
Determines HOW the language should be written
https://www.ecma-international.org/publications/standards/Ecma-262.htm

# Javascript Engine
A program that converts Javascript code into something the computer processor
can Understand

# Servers and Clients
Server - computer the performs services
Client - asks for services

# Machine Code (Language)
Programming Languages spoken by computer Processors
Every program you run on a computer has been converted (compiled) into a
machine code.

# Breakpoint
A spot in our code where we tell a debugging tool to pause the execution of our
code.

# Module
A reusable block of code who's existence does not accidentally impact other
Code

# Common JS Modules
An agreed upon standard for how code modules should be structured

# First-Class functions
Everything you can do with other types you can do with functions.

# Expression
A block of code that results in a Value

# Invoke
Run the function

# Name/Value Pair
A name which maps to a value
A value can contain more name/value pairs

# Objects
A collection of name/value pairs

# Object literal
Name/Value pairs separated by commas and surrounded by curly braces

# Inheritance
One object gets access to the properties and methods of another Object

# Function constructors
A normal function that is used to construct Objects

# Primitive
A type of data that represents a single value (not an object)

# Scope
Where in code you have access to a particular variable or function.

# JSON
Javascript Object Notation -  A standard for structuring data that is inspired
by Javascript object literals

# Revealing Module Pattern
Exposing only the properties and methods you want via an returned Object

# Mutate
To change an Object

# Event
Something that has happened in our app that we can respond to
In node we actually talk about 2 different kinds of events
- System Events (C++ Core, libuv)
- Custom Events (Javascript Core, Event Emitter)

# Event listener
The code that responds to an event

# Magic string
A string that has some special meaning in our Code

# Template literal
A way to concatenate strings in Javascript (without using '+')

# Syntactic Sugar
A feature that only changes how you type something, but nothing changes under
the hood

# Asynchronous
More than one process running simultaneously
Note: Node is Asynchronous, V8 is not. Javascript is not.

# Synchronous
One process executing at a time.
Note: Javascript is synchronous. NodeJS is asynchronous

# Callback
A function passed to some other function, which we assume will be invoked at
some point

# Non-Blocking
Doing other things without stopping your Programming from running
Made possible by executing code asynchronously

# Buffer
A temporary holding spot for data being moved from one place to another

# Stream
A sequence of data made available over time

# Binary data
Data stored in binary (sets of 1s and 0s)
0101 = 5
Base 2 representation of a number

# Character sets (Unicode)
A representation of characters as numbers

# Character Encoding (UTF-8)
How characters are stored in binary

# Byte
8 bits.
00101100
